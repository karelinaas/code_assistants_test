# Generated by Django 5.1.2 on 2024-10-31 17:40

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Изменено')),
                ('is_deactivated', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.CharField(max_length=255, null=True, verbose_name='Описание')),
                ('promocode', models.CharField(max_length=20, verbose_name='Промокод')),
                ('reward', models.FloatField(verbose_name='Размер вознаграждения')),
                ('active_since', models.DateField(verbose_name='Активна с')),
                ('active_till', models.DateField(verbose_name='Активна до')),
                ('discount', models.IntegerField(blank=True, null=True, verbose_name='Размер скидки')),
            ],
            options={
                'verbose_name': 'Реферальная программа',
                'verbose_name_plural': 'Реферальные программы',
            },
        ),
        migrations.CreateModel(
            name='Affiliate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Изменено')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Участник',
                'verbose_name_plural': 'Участники',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ReferralStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Изменено')),
                ('referrals_number', models.IntegerField(default=0, verbose_name='Кол-во приведённых клиентов')),
                ('affiliate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to=settings.AUTH_USER_MODEL, verbose_name='Участник')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='referrals.campaign', verbose_name='Реферальная программа')),
            ],
            options={
                'verbose_name': 'Статистика по реферальной программе',
                'verbose_name_plural': 'Статистика по реферальным программам',
                'unique_together': {('campaign', 'affiliate')},
            },
        ),
        migrations.CreateModel(
            name='ReferralStatSimplified',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promocode', models.CharField(default=123, max_length=10, verbose_name='Промокод')),
                ('referrals_number', models.IntegerField(default=0, verbose_name='Кол-во приведённых клиентов')),
                ('username', models.CharField(default=123, max_length=100, verbose_name='Имя пользователя')),
            ],
            options={
                'verbose_name': 'Упрощённая статистика',
                'verbose_name_plural': 'Упрощённая статистика',
                'unique_together': {('promocode', 'username')},
            },
        ),
    ]
